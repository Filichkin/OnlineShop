"""Added upds

Revision ID: bbf100b69d16
Revises: b24d9a86d715
Create Date: 2025-10-24 17:44:45.114697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bbf100b69d16'
down_revision: Union[str, Sequence[str], None] = 'b24d9a86d715'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Сначала удаляем foreign key constraints
    op.drop_constraint('product_category_id_fkey', 'product', type_='foreignkey')
    op.drop_constraint('media_product_id_fkey', 'media', type_='foreignkey')
    op.drop_constraint('media_category_id_fkey', 'media', type_='foreignkey')
    
    # Теперь удаляем таблицы
    op.drop_table('product')
    op.drop_table('category')
    
    op.alter_column('media', 'order',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('media', 'is_main',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('media', 'is_main',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('media', 'order',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('product',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('product_category_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_pkey'))
    )
    op.create_table('category',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('category_pkey')),
    sa.UniqueConstraint('name', name=op.f('category_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
